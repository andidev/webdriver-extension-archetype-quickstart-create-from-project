#!/usr/bin/env ruby
require 'rubygems'
require 'FileUtils'
require 'nokogiri'
require 'find'

# pom.xml variables
artifact_id = "webdriverextensions-archetype-quickstart"
name = "WebDriver Extension Archetype Quickstart"
description = "Use this archetype to create a new Page Object Pattern based WebDriver Extension project."
url = "https://github.com/webdriverextensions/#{artifact_id}"
scm_connection = "scm:git:git@github.com:webdriverextensions/#{artifact_id}.git"
scm_developerConnection = "scm:git:git@github.com:webdriverextensions/#{artifact_id}.git"
scm_url = "git@github.com:webdriverextensions/#{artifact_id}.git"

pom_addons = """

  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>9</version>
  </parent>

  <description>#{description}</description>

  <url>#{url}</url>

  <scm>
    <connection>#{scm_connection}</connection>
    <developerConnection>#{scm_developerConnection}</developerConnection>
    <url>#{scm_url}</url>
  </scm>

  <distributionManagement>
    <repository>
      <id>sonatype-nexus-staging</id>
      <name>Nexus Release Repository</name>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
    <snapshotRepository>
      <id>sonatype-nexus-snapshots</id>
      <name>Sonatype Nexus Snapshots</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
    </snapshotRepository>
  </distributionManagement>"""

pom_plugins = """

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.5</version>
        <configuration>
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <useReleaseProfile>false</useReleaseProfile>
          <releaseProfiles>release</releaseProfiles>
          <goals>deploy</goals>
          <!--<goals>deploy nexus-staging:release</goals>-->
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>1.6.2</version>
        <extensions>true</extensions>
        <configuration>
          <serverId>ossrh</serverId>
          <nexusUrl>https://oss.sonatype.org/</nexusUrl>
          <autoReleaseAfterClose>true</autoReleaseAfterClose>
        </configuration>
      </plugin>
    </plugins>"""

pom_profiles = """

  <profiles>
      <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>2.2.1</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>2.9.1</version>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.5</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>"""

# Remove unused files before generation
puts 'Removing libpeerconnection.log'
FileUtils.rm_f('libpeerconnection.log')

# Create archetype from project
command = "mvn clean archetype:create-from-project -Darchetype.properties=archetype.properties -Darchetype.preserveCData=true"
puts command
puts `#{command}`

# Replace SiteName in file names to __siteName__
puts 'Replacing SiteName in file names to __siteName__'
Find.find('./target/generated-sources/archetype/src') do |path|
  	if path =~ /.*SiteName.*/
  		new_path = path.sub 'SiteName', '__siteName__'
  		puts "mv #{path} #{new_path}"
  		FileUtils.mv(path, new_path)
	end
end

# Correct pom.xml
xml = Nokogiri::XML(File.open('target/generated-sources/archetype/pom.xml'))
xml.css('project > name')[0].content = name
xml.css('project > name')[0].add_next_sibling(pom_addons)
xml.css('project > build > pluginManagement')[0].add_next_sibling(pom_plugins)
xml.css('project > build')[0].add_next_sibling(pom_profiles)
File.open('target/generated-sources/archetype/pom.xml', 'w') {|f| f.puts xml.to_xml }

# Correct archetype.xml
xml = Nokogiri::XML(File.open('target/generated-sources/archetype/src/main/resources/META-INF/maven/archetype-metadata.xml'))
xml.css('requiredProperties > requiredProperty > defaultValue').remove
File.open('target/generated-sources/archetype/src/main/resources/META-INF/maven/archetype-metadata.xml', 'w') {|f| f.puts xml.to_xml }

# Remove the install and deploy file from generated archetype
puts 'Removing install, deploy and release file from generated archetype'
FileUtils.rm_f('target/generated-sources/archetype/src/main/resources/archetype-resources/install')
FileUtils.rm_f('target/generated-sources/archetype/src/main/resources/archetype-resources/deploy')
FileUtils.rm_f('target/generated-sources/archetype/src/main/resources/archetype-resources/README.md')
FileUtils.rm_f('target/generated-sources/archetype/src/main/resources/archetype-resources/LICENSE')

puts 'mvn clean install -f target/generated-sources/archetype/pom.xml'
puts `mvn clean install -f target/generated-sources/archetype/pom.xml`